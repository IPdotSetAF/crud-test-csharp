@page "/fetchcustomers"
@using DTOs.Customer
@inject HttpClient _http

<h1>Customers</h1>

<p>This component fetches all customers from the server.</p>

<p>Customer ID :&emsp;<input id="customerId" name="Customer ID" type="text" value=""/>&emsp;<input type="submit" value="Fetch Customer" class="submit" onclick="@GetCustomerById"/></p>


@if (_customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>First name</th>
                <th>Last name</th>
                <th>Date of birth</th>
                <th>Phone number</th>
                <th>Email</th>
                <th>Bank account</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (CustomerGetDTO customer in _customers)
            {
                <tr>
                     <td>@customer.Id.ToString()</td>
                     <td>@customer.FirstName</td>
                     <td>@customer.LastName</td>
                     <td>@customer.DateOfBirth.ToShortDateString()</td>
                     <td>+@customer.PhoneNumber.ToString()</td>
                     <td>@customer.Email</td>
                     <td>@customer.BankAccountNumber.ToString()</td>
                     <td><input type="submit" value="Remove" class="delete" onclick="@DeleteCustomerById"/></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private CustomerGetDTO[] _customers;

    protected override async Task OnInitializedAsync()
    {
        _customers = await _http.GetFromJsonAsync<CustomerGetDTO[]>("api/Customer");
    }

    private async Task GetCustomerById()
    {
        _customers = null;

        //TODO: validate id
        //TODO: fetch customer by id
    }

    private async Task DeleteCustomerById(Guid id)
    {
        //TODO: remove customer

        await OnInitializedAsync();
    }
}
