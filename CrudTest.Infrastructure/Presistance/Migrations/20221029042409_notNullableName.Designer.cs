// <auto-generated />
using System;
using CrudTest.Infrastructure.Presistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudTest.Infrastructure.Presistance.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221029042409_notNullableName")]
    partial class notNullableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CrudTest.Core.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName", "DateOfBirth")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff336907-0499-11d1-0d89-6e2c525e39e5"),
                            DateOfBirth = new DateTime(2020, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ali",
                            LastName = "Nazari"
                        },
                        new
                        {
                            Id = new Guid("5c740a82-5dab-dd83-8452-e4299aaad12f"),
                            DateOfBirth = new DateTime(2020, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mahdi",
                            LastName = "Nazari"
                        },
                        new
                        {
                            Id = new Guid("b2c3a9ba-f1a9-2627-dce1-c0101ddfff08"),
                            DateOfBirth = new DateTime(2020, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Saeed",
                            LastName = "Rezaii"
                        },
                        new
                        {
                            Id = new Guid("3dde6799-7063-d42e-ba04-85ff4e664534"),
                            DateOfBirth = new DateTime(2020, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Hooshang",
                            LastName = "Motahari"
                        });
                });

            modelBuilder.Entity("CrudTest.Core.Domain.Entities.Customer", b =>
                {
                    b.OwnsOne("CrudTest.Core.Domain.Entities.ValueObjects.BankAccountNumber", "BankAccountNumber", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(20,0)")
                                .HasColumnName("BankAccountNumber");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.HasData(
                                new
                                {
                                    CustomerId = new Guid("ff336907-0499-11d1-0d89-6e2c525e39e5"),
                                    Value = 1212121212121212m
                                },
                                new
                                {
                                    CustomerId = new Guid("5c740a82-5dab-dd83-8452-e4299aaad12f"),
                                    Value = 1212121212121212m
                                },
                                new
                                {
                                    CustomerId = new Guid("b2c3a9ba-f1a9-2627-dce1-c0101ddfff08"),
                                    Value = 1212121212121212m
                                },
                                new
                                {
                                    CustomerId = new Guid("3dde6799-7063-d42e-ba04-85ff4e664534"),
                                    Value = 1212121212121212m
                                });
                        });

                    b.OwnsOne("CrudTest.Core.Domain.Entities.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Email");

                            b1.HasKey("CustomerId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.HasData(
                                new
                                {
                                    CustomerId = new Guid("ff336907-0499-11d1-0d89-6e2c525e39e5"),
                                    Value = "ipdotsetaf.work@gmail.com"
                                },
                                new
                                {
                                    CustomerId = new Guid("5c740a82-5dab-dd83-8452-e4299aaad12f"),
                                    Value = "ipdotsetaf@gmail.com"
                                },
                                new
                                {
                                    CustomerId = new Guid("b2c3a9ba-f1a9-2627-dce1-c0101ddfff08"),
                                    Value = "testt@gmail.com"
                                },
                                new
                                {
                                    CustomerId = new Guid("3dde6799-7063-d42e-ba04-85ff4e664534"),
                                    Value = "test2@gmail.com"
                                });
                        });

                    b.OwnsOne("CrudTest.Core.Domain.Entities.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(20,0)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.HasData(
                                new
                                {
                                    CustomerId = new Guid("ff336907-0499-11d1-0d89-6e2c525e39e5"),
                                    Value = 989387016860m
                                },
                                new
                                {
                                    CustomerId = new Guid("5c740a82-5dab-dd83-8452-e4299aaad12f"),
                                    Value = 989387016860m
                                },
                                new
                                {
                                    CustomerId = new Guid("b2c3a9ba-f1a9-2627-dce1-c0101ddfff08"),
                                    Value = 19387016860m
                                },
                                new
                                {
                                    CustomerId = new Guid("3dde6799-7063-d42e-ba04-85ff4e664534"),
                                    Value = 989387016860m
                                });
                        });

                    b.Navigation("BankAccountNumber")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
